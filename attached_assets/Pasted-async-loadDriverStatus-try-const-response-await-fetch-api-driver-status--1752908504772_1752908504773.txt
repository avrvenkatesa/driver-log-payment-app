async loadDriverStatus() {
    try {
        const response = await fetch('/api/driver/status', {
            headers: { 'Authorization': `Bearer ${this.token}` }
        });

        const data = await response.json();
        const statusDiv = document.getElementById('shift-status');

        if (data.hasActiveShift) {
            const shift = data.activeShift;
            
            // Debug logging
            console.log('Server timestamp:', shift.clock_in_time);
            
            // Show CURRENT time instead of stored start time
            const now = new Date();
            const currentTime = now.toLocaleString('en-IN', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            });
            
            console.log('Showing current time as start time:', currentTime);
            
            statusDiv.innerHTML = `
                <div class="active-shift">
                    <p><strong>${this.translator.t('currentlyOnShift')}</strong></p>
                    <p>${this.translator.t('started')}: ${currentTime} (now)</p>
                    <p>${this.translator.t('startOdometer')}: ${shift.start_odometer} ${this.translator.t('km')}</p>
                </div>
            `;
            document.getElementById('clock-in-btn').disabled = true;
            document.getElementById('clock-out-btn').disabled = false;
        } else {
            statusDiv.innerHTML = `
                <div class="no-shift">
                    <p><strong>${this.translator.t('notOnShift')}</strong></p>
                    <p>${this.translator.t('readyForNewShift')}</p>
                </div>
            `;
            document.getElementById('clock-in-btn').disabled = false;
            document.getElementById('clock-out-btn').disabled = true;
        }
    } catch (error) {
        this.showMessage(this.translator.t('failedToLoadShiftStatus'), 'error');
    }
}