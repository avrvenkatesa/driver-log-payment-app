// Translation system for Driver Log App
class TranslationManager {
    constructor() {
        this.currentLanguage = localStorage.getItem('language') || 'en';
        this.translations = {
            en: {
                // Header
                appTitle: "Driver Log & Payment App",
                driverDashboard: "Driver Dashboard",
                adminPanel: "Admin Panel",

                // System Status
                systemStatus: "System Status",
                checking: "Checking...",
                serverHealthy: "ЁЯЪЧ Driver Log App Server is running!",
                serverError: "Server connection failed",

                // Authentication
                driverLogin: "Driver Login",
                driverRegistration: "Driver Registration",
                phone: "Phone Number",
                email: "Email",
                phoneOrEmail: "Phone Number or Email",
                password: "Password",
                fullName: "Full Name",
                login: "Login",
                register: "Register",
                logout: "Logout",
                dontHaveAccount: "Don't have an account?",
                registerHere: "Register here",
                alreadyHaveAccount: "Already have an account?",
                loginHere: "Login here",

                // Phone Verification
                phoneVerification: "Phone Verification",
                enterVerificationCode: "Please enter the verification code sent to your phone.",
                verificationCode: "Verification Code",
                verify: "Verify",
                resendCode: "Resend Code",

                // Dashboard
                welcome: "Welcome",
                shiftStatus: "Shift Status",
                currentlyOnShift: "ЁЯЯв Currently on shift",
                notOnShift: "тнХ Not on shift",
                readyForNewShift: "Ready to start a new shift",
                started: "Started",
                startOdometer: "Start Odometer",

                // Quick Actions
                quickActions: "Quick Actions",
                startShift: "Start Shift",
                endShift: "End Shift",
                viewTodaysShifts: "View Today's Shifts",

                // Forms
                startNewShift: "Start New Shift",
                endCurrentShift: "End Current Shift",
                startingOdometerReading: "Starting Odometer Reading (km):",
                endingOdometerReading: "Ending Odometer Reading (km):",
                clockIn: "Clock In",
                clockOut: "Clock Out",
                cancel: "Cancel",

                // Shifts Display
                todaysShifts: "Today's Shifts",
                shift: "Shift",
                start: "Start",
                end: "End",
                distance: "Distance",
                duration: "Duration",
                minutes: "minutes",
                km: "km",
                currentlyActive: "Currently Active",
                noShiftsToday: "No shifts recorded for today.",

                // Messages
                loginSuccessful: "Login successful!",
                registrationSuccessful: "Registration successful! Please login.",
                registrationWithVerification: "Registration successful! Please verify your phone.",
                phoneVerifiedSuccessfully: "Phone verified successfully! You can now login.",
                clockedInSuccessfully: "Clocked in successfully!",
                clockedOutSuccessfully: "Clocked out successfully!",
                verificationCodeSent: "New verification code sent!",

                // Field requirements
                optional: "Optional",
                fieldsMarkedRequired: "* Fields marked with asterisk are required",

                // Errors
                phoneEmailPasswordRequired: "Phone/Email and password required",
                namePhoneRequired: "Name and phone number required",
                phoneRequired: "Phone number required",
                phoneCodeRequired: "Phone number and verification code required",
                validStartOdometerRequired: "Valid starting odometer reading required",
                validEndOdometerRequired: "Valid ending odometer reading required",
                alreadyActiveShift: "You already have an active shift. Please clock out first.",
                noActiveShift: "No active shift found. Please clock in first.",
                endOdometerLessThanStart: "End odometer cannot be less than start odometer",
                loginFailed: "Login failed. Please try again.",
                registrationFailed: "Registration failed. Please try again.",
                verificationFailed: "Verification failed. Please try again.",
                failedToClockIn: "Failed to clock in",
                failedToClockOut: "Failed to clock out",
                failedToLoadShiftStatus: "Failed to load shift status",
                failedToLoadShifts: "Failed to load shifts",
                failedToResendCode: "Failed to resend code. Please try again."
            },
            ta: {
                // Header
                appTitle: "роУроЯрпНроЯрпБроиро░рпН рокродро┐ро╡рпБ рооро▒рпНро▒рпБроорпН роХроЯрпНроЯрог роЪрпЖропро▓ро┐",
                driverDashboard: "роУроЯрпНроЯрпБроиро░рпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпНроЯрпБ рокро▓роХрпИ",
                adminPanel: "роиро┐ро░рпНро╡ро╛роХ рокро▓роХрпИ",

                // System Status
                systemStatus: "роХрогро┐ройро┐ роиро┐ро▓рпИ",
                checking: "роЪро░ро┐рокро╛ро░рпНроХрпНроХро┐ро▒родрпБ...",
                serverHealthy: "ЁЯЪЧ роУроЯрпНроЯрпБроиро░рпН рокродро┐ро╡рпБ роЪрпЖропро▓ро┐ роЗропроЩрпНроХрпБроХро┐ро▒родрпБ!",
                serverError: "роЪро░рпНро╡ро░рпН роЗрогрпИрокрпНрокрпБ родрпЛро▓рпНро╡ро┐ропроЯрпИроирпНродродрпБ",

                // Authentication
                driverLogin: "роУроЯрпНроЯрпБроиро░рпН роЙро│рпНроирпБро┤рпИро╡рпБ",
                driverRegistration: "роУроЯрпНроЯрпБроиро░рпН рокродро┐ро╡рпБ",
                phone: "родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН",
                email: "рооро┐ройрпНройроЮрпНроЪро▓рпН",
                phoneOrEmail: "родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН роЕро▓рпНро▓родрпБ рооро┐ройрпНройроЮрпНроЪро▓рпН",
                password: "роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
                fullName: "роорпБро┤рпБ рокрпЖропро░рпН",
                login: "роЙро│рпНроирпБро┤рпИро╡рпБ",
                register: "рокродро┐ро╡рпБ роЪрпЖропрпНроХ",
                logout: "ро╡рпЖро│ро┐ропрпЗро▒рпБ",
                dontHaveAccount: "роХрогроХрпНроХрпБ роЗро▓рпНро▓рпИропро╛?",
                registerHere: "роЗроЩрпНроХрпЗ рокродро┐ро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН",
                alreadyHaveAccount: "роПро▒рпНроХройро╡рпЗ роХрогроХрпНроХрпБ роЙро│рпНро│родро╛?",
                loginHere: "роЗроЩрпНроХрпЗ роЙро│рпНроирпБро┤рпИропрпБроЩрпНроХро│рпН",

                // Phone Verification
                phoneVerification: "родрпКро▓рпИрокрпЗроЪро┐ роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ",
                enterVerificationCode: "роЙроЩрпНроХро│рпН родрпКро▓рпИрокрпЗроЪро┐роХрпНроХрпБ роЕройрпБрокрпНрокрокрпНрокроЯрпНроЯ роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ роХрпБро▒ро┐ропрпАроЯрпНроЯрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН.",
                verificationCode: "роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ роХрпБро▒ро┐ропрпАроЯрпБ",
                verify: "роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН",
                resendCode: "роХрпБро▒ро┐ропрпАроЯрпНроЯрпИ роорпАрогрпНроЯрпБроорпН роЕройрпБрокрпНрокро╡рпБроорпН",

                // Dashboard
                welcome: "ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН",
                shiftStatus: "ро╖ро┐роГрокрпНроЯрпН роиро┐ро▓рпИ",
                currentlyOnShift: "ЁЯЯв родро▒рпНрокрпЛродрпБ ро╖ро┐роГрокрпНроЯрпНроЯро┐ро▓рпН",
                notOnShift: "тнХ ро╖ро┐роГрокрпНроЯрпНроЯро┐ро▓рпН роЗро▓рпНро▓рпИ",
                readyForNewShift: "рокрпБродро┐роп ро╖ро┐роГрокрпНроЯрпН родрпКроЯроЩрпНроХ родропро╛ро░рпН",
                started: "родрпКроЯроЩрпНроХро┐ропродрпБ",
                startOdometer: "родрпКроЯроХрпНроХ роУроЯрпЛроорпАроЯрпНроЯро░рпН",

                // Quick Actions
                quickActions: "ро╡ро┐ро░рпИро╡рпБ роЪрпЖропро▓рпНроХро│рпН",
                startShift: "ро╖ро┐роГрокрпНроЯрпН родрпКроЯроЩрпНроХрпБ",
                endShift: "ро╖ро┐роГрокрпНроЯрпН роорпБроЯро┐роХрпНроХро╡рпБроорпН",
                viewTodaysShifts: "роЗройрпНро▒рпИроп ро╖ро┐роГрокрпНроЯрпНроХро│рпИрокрпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН",

                // Forms
                startNewShift: "рокрпБродро┐роп ро╖ро┐роГрокрпНроЯрпН родрпКроЯроЩрпНроХро╡рпБроорпН",
                endCurrentShift: "родро▒рпНрокрпЛродрпИроп ро╖ро┐роГрокрпНроЯрпН роорпБроЯро┐роХрпНроХро╡рпБроорпН",
                startingOdometerReading: "родрпКроЯроХрпНроХ роУроЯрпЛроорпАроЯрпНроЯро░рпН роЕро│ро╡рпАроЯрпБ (роХро┐.роорпА):",
                endingOdometerReading: "роорпБроЯро┐ро╡рпБ роУроЯрпЛроорпАроЯрпНроЯро░рпН роЕро│ро╡рпАроЯрпБ (роХро┐.роорпА):",
                clockIn: "роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роЙро│рпНроирпБро┤рпИро╡рпБ",
                clockOut: "роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН ро╡рпЖро│ро┐ропрпЗро▒рпНро▒роорпН",
                cancel: "ро░родрпНродрпБ роЪрпЖропрпНропро╡рпБроорпН",

                // Shifts Display
                todaysShifts: "роЗройрпНро▒рпИроп ро╖ро┐роГрокрпНроЯрпНроХро│рпН",
                shift: "ро╖ро┐роГрокрпНроЯрпН",
                start: "родрпКроЯроХрпНроХроорпН",
                end: "роорпБроЯро┐ро╡рпБ",
                distance: "родрпВро░роорпН",
                duration: "роХро╛ро▓ роЕро│ро╡рпБ",
                minutes: "роиро┐рооро┐роЯроЩрпНроХро│рпН",
                km: "роХро┐.роорпА",
                currentlyActive: "родро▒рпНрокрпЛродрпБ роЪрпЖропро▓ро┐ро▓рпН",
                noShiftsToday: "роЗройрпНро▒рпИроХрпНроХрпБ ро╖ро┐роГрокрпНроЯрпНроХро│рпН рокродро┐ро╡рпБ роЪрпЖропрпНропрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ.",

                // Field requirements
                optional: "ро╡ро┐ро░рпБрокрпНрокрооро╛рой",
                fieldsMarkedRequired: "* роироЯрпНроЪродрпНродро┐ро░роорпН роХрпБро▒ро┐роХрпНроХрокрпНрокроЯрпНроЯ рокрпБро▓роЩрпНроХро│рпН родрпЗро╡рпИ",

                // Messages
                loginSuccessful: "роЙро│рпНроирпБро┤рпИро╡рпБ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ!",
                registrationSuccessful: "рокродро┐ро╡рпБ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ! родропро╡рпБроЪрпЖропрпНродрпБ роЙро│рпНроирпБро┤рпИропрпБроЩрпНроХро│рпН.",
                registrationWithVerification: "рокродро┐ро╡рпБ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ! роЙроЩрпНроХро│рпН родрпКро▓рпИрокрпЗроЪро┐ропрпИ роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН.",
                phoneVerifiedSuccessfully: "родрпКро▓рпИрокрпЗроЪро┐ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роЪро░ро┐рокро╛ро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ! роЗрокрпНрокрпЛродрпБ роирпАроЩрпНроХро│рпН роЙро│рпНроирпБро┤рпИропро▓ро╛роорпН.",
                clockedInSuccessfully: "ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роирпБро┤рпИроирпНродродрпБ!",
                clockedOutSuccessfully: "ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роЗро░рпБроирпНродрпБ ро╡рпЖро│ро┐ропрпЗро▒ро┐ропродрпБ!",
                verificationCodeSent: "рокрпБродро┐роп роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ роХрпБро▒ро┐ропрпАроЯрпБ роЕройрпБрокрпНрокрокрпНрокроЯрпНроЯродрпБ!",

                // Errors
                phoneEmailPasswordRequired: "родрпКро▓рпИрокрпЗроЪро┐/рооро┐ройрпНройроЮрпНроЪро▓рпН рооро▒рпНро▒рпБроорпН роХроЯро╡рпБроЪрпНроЪрпКро▓рпН родрпЗро╡рпИ",
                namePhoneRequired: "рокрпЖропро░рпН рооро▒рпНро▒рпБроорпН родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН родрпЗро╡рпИ",
                phoneRequired: "родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН родрпЗро╡рпИ",
                phoneCodeRequired: "родрпКро▓рпИрокрпЗроЪро┐ роОрогрпН рооро▒рпНро▒рпБроорпН роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ роХрпБро▒ро┐ропрпАроЯрпБ родрпЗро╡рпИ",
                validStartOdometerRequired: "роЪро░ро┐ропро╛рой родрпКроЯроХрпНроХ роУроЯрпЛроорпАроЯрпНроЯро░рпН роЕро│ро╡рпАроЯрпБ родрпЗро╡рпИ",
                validEndOdometerRequired: "роЪро░ро┐ропро╛рой роорпБроЯро┐ро╡рпБ роУроЯрпЛроорпАроЯрпНроЯро░рпН роЕро│ро╡рпАроЯрпБ родрпЗро╡рпИ",
                alreadyActiveShift: "роЙроЩрпНроХро│рпБроХрпНроХрпБ роПро▒рпНроХройро╡рпЗ роЪрпЖропро▓ро┐ро▓рпН роЙро│рпНро│ ро╖ро┐роГрокрпНроЯрпН роЙро│рпНро│родрпБ. роорпБродро▓ро┐ро▓рпН роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роЗро░рпБроирпНродрпБ ро╡рпЖро│ро┐ропрпЗро▒рпБроЩрпНроХро│рпН.",
                noActiveShift: "роЪрпЖропро▓ро┐ро▓рпН роЙро│рпНро│ ро╖ро┐роГрокрпНроЯрпН роЗро▓рпНро▓рпИ. роорпБродро▓ро┐ро▓рпН роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роирпБро┤рпИропрпБроЩрпНроХро│рпН.",
                endOdometerLessThanStart: "роорпБроЯро┐ро╡рпБ роУроЯрпЛроорпАроЯрпНроЯро░рпН родрпКроЯроХрпНроХ роУроЯрпЛроорпАроЯрпНроЯро░рпИ ро╡ро┐роЯ роХрпБро▒рпИро╡ро╛роХ роЗро░рпБроХрпНроХ роорпБроЯро┐ропро╛родрпБ",
                loginFailed: "роЙро│рпНроирпБро┤рпИро╡рпБ родрпЛро▓рпНро╡ро┐ропроЯрпИроирпНродродрпБ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.",
                registrationFailed: "рокродро┐ро╡рпБ родрпЛро▓рпНро╡ро┐ропроЯрпИроирпНродродрпБ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.",
                verificationFailed: "роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБ родрпЛро▓рпНро╡ро┐ропроЯрпИроирпНродродрпБ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН.",
                failedToClockIn: "роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роирпБро┤рпИроп роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ",
                failedToClockOut: "роХроЯро┐роХро╛ро░родрпНродро┐ро▓рпН роЗро░рпБроирпНродрпБ ро╡рпЖро│ро┐ропрпЗро▒ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ",
                failedToLoadShiftStatus: "ро╖ро┐роГрокрпНроЯрпН роиро┐ро▓рпИропрпИ роПро▒рпНро▒ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ",
                failedToLoadShifts: "ро╖ро┐роГрокрпНроЯрпНроХро│рпИ роПро▒рпНро▒ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ",
                failedToResendCode: "роХрпБро▒ро┐ропрпАроЯрпНроЯрпИ роорпАрогрпНроЯрпБроорпН роЕройрпБрокрпНрок роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ. роорпАрогрпНроЯрпБроорпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН."
            }
        };
    }

    setLanguage(language) {
        this.currentLanguage = language;
        localStorage.setItem('language', language);
    }

    getCurrentLanguage() {
        return this.currentLanguage;
    }

    t(key) {
        return this.translations[this.currentLanguage][key] || this.translations['en'][key] || key;
    }

    getAvailableLanguages() {
        return [
            { code: 'en', name: 'English' },
            { code: 'ta', name: 'родрооро┐ро┤рпН' }
        ];
    }
}

// Export for use in other files
window.TranslationManager = TranslationManager;